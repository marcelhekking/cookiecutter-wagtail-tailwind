name: Continuous Integration and Delivery

on: [push]

env:
  WEB_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/web
jobs:
  django-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: marcelhekking/action-python-lint@main
        with:
          python-version: "3.11"

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: django-lint
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up Pulumi ESC
        uses: pulumi/esc-action@v1
        with:
          environment: {{cookiecutter.pulumi_environment}}
        env:
          PULUMI_ACCESS_TOKEN: ${{ '{{' }} secrets.PULUMI_ACCESS_TOKEN {{ '}}' }}

      - name: Add Pulumi environment variables to .env_var
        run: |
          esc env get {{cookiecutter.pulumi_environment}} --value dotenv >> .env_var --show-secrets

      - name: Set remaining environment variables
        run: |
          echo TEST=test >> .env_var
          echo "WEB_IMAGE=$(echo ${{ '{{' }}env.WEB_IMAGE{{ '}}' }} )" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        run: echo $PERSONAL_ACCESS_TOKEN | docker login ghcr.io -u $NAMESPACE --password-stdin

      - name: Pull images
        run: |
          docker pull ${{ '{{' }}env.WEB_IMAGE{{ '}}' }} || true

      - name: Build images
        run: |
          docker build -t ${{ '{{' }}env.WEB_IMAGE{{ '}}' }}:latest -f Dockerfile .

      - name: Test web image
        run: |
          docker compose -f docker-compose.yml run --rm web sh -c "python -m pytest ../tests/"

      - name: Push images
        run: |
          docker push ${{ '{{' }}env.WEB_IMAGE{{ '}}' }}:latest

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up Pulumi ESC
        uses: pulumi/esc-action@v1
        with:
          environment: {{cookiecutter.pulumi_environment}}
        env:
          PULUMI_ACCESS_TOKEN: ${{ '{{' }} secrets.PULUMI_ACCESS_TOKEN {{ '}}' }}

      - name: Add Pulumi environment variables to .env_var
        run: |
          esc env get {{cookiecutter.pulumi_environment}} --value dotenv >> .env_var --show-secrets

      - name: Set remaining environment variables
        run: |
          echo "WEB_IMAGE=$(echo ${{ '{{' }}env.WEB_IMAGE{{ '}}' }} )"  >> .env_var
          echo "WEB_IMAGE=$(echo ${{ '{{' }}env.WEB_IMAGE{{ '}}' }} )" >> $GITHUB_ENV

      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ '{{' }} secrets.PRIVATE_KEY_DROPLET {{ '}}' }}"

      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env_var ./docker-compose.yml root@$DOMAIN_NAME:/app
          ssh -o StrictHostKeyChecking=no root@$DOMAIN_NAME << 'ENDSSH'
            cd /app
            export $(grep -v '^#' .env_var | xargs)
            echo $PERSONAL_ACCESS_TOKEN | docker login ghcr.io -u $NAMESPACE --password-stdin
            docker pull $WEB_IMAGE
            docker compose -f docker-compose.yml up -d
          ENDSSH
